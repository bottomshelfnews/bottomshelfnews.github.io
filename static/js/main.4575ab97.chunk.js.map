{"version":3,"sources":["actions/loginAction.js","Firebase.js","store.js","Landing.js","Login.js","Signup.js","actions/gotPostsAction.js","actions/deleteAction.js","actions/editAction.js","Rewrite.js","Item.js","ItemList.js","util/sortHeadlines.js","NewsHome.js","Newspaper.js","Category.js","UserPage.js","articles.js","NewPost.js","Detail.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["loginAction","user","type","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","date","yesterday","Date","setDate","getDate","toJSON","slice","Firebase","_this","this","Object","classCallCheck","createUser","email","pass","name","auth","createUserWithEmailAndPassword","then","res","updateProfile","displayName","login","signInWithEmailAndPassword","signInAnonymously","logOut","signOut","resetPass","sendPasswordResetEmail","updatePass","newPass","currentUser","updatePassword","newArticle","title","url","category","old","newPost","db","ref","push","d","set","newHeadline","storyID","headline","console","log","newHeadlineKey","key","uid","updates","username","votes","defineProperty","story","update","fakeVotes","postID","headlineID","count","post","i","fakeUID","uuid","v4","substr","up","Math","random","vote","v","getTopPosts","orderByChild","equalTo","once","getSubmissionsByUser","getSubmissionByID","subID","getStorySubmissionByID","storyAndSubID","getStoryByID","app","initializeApp","database","unsub","onAuthStateChanged","store","dispatch","num","createStore","state","action","objectSpread","userID","posts","data","filter","map","oldPost","newTitle","newURL","firebase","categories","Landing","props","setLogin","history","react_default","a","createElement","className","react_router_dom","to","onClick","guestLogin","bind","React","Component","connect","LoginForm","possibleConstructorReturn","getPrototypeOf","call","error","event","_this2","preventDefault","setState","catch","target","value","_this3","welcome","onSubmit","submit","onChange","change","message","Connected","Login","withRouter","SignupForm","authUser","SignupPage","gotPostsAction","deleteAction","editAction","Rewrite","rw","temp","score","style","marginLeft","buttons","Item","headlines","show","newkey","newhl","concat","length","values","reduce","cur","orTitle","src_Rewrite","Item_NewSubmission","NewSubmission","_useState","useState","_useState2","slicedToArray","inEdit","setInEdit","Item_Editor","cancel","Editor","text_ref","createRef","width","height","current","deleteSuccess","id","editSuccess","ItemList","items","item","src_Item","timestamp","sortHeadlines","submissions","keys","sort","b","NewsHome","stories","val","postsObject","subs","k","getSubmissionsForPost","Promise","all","results","r","sub","index","s","gotPosts","e","src_ItemList","Newspaper","Category","show_category","UserPage","postsAndUserSubmissions","match","params","storiesWithUserSubs","story_keys","subPromises","flat","path","toString","split","forEach","story_promises","story_data","articles","isValidURL","str","NewPost","_ref","cat","_this4","_this5","selector","_this6","fake","fake_yesterday","fakeSubs","autoComplete","autoFocus","placeholder","Detail","ownProps","disp","doLogout","react_router","exact","component","Signup","App","src_TopBar","Boolean","window","location","hostname","ReactDOM","render","es","configureStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRAEeA,eAFG,SAACC,GAAD,MAAW,CAACC,KAAM,eAAgBD,KAAMA,sBCOpDE,EAAiB,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAIfC,EAAO,iBAAM,cACbC,EAAY,kBACd,IAAIC,MAAK,IAAIA,MAAOC,SAAQ,IAAID,MAAOE,UAAU,IAAKC,SAASC,MAAM,EAAE,KAuJ1DC,aAnJd,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAgBdG,WAAa,SAACC,EAAOC,EAAMC,GAC1B,OAAOP,EAAKQ,KAAKC,+BAA+BJ,EAAMC,GACrDI,KAAK,SAAAC,GAAG,OAAGA,EAAI9B,KAAK+B,cAAc,CAACC,YAAYN,OAlBnCN,KAqBda,MAAQ,SAACT,EAAOC,GACf,OAAKD,GAAUC,EAGRN,EAAKQ,KAAKO,2BAA2BV,EAAOC,GAF3CN,EAAKQ,KAAKQ,qBAvBLf,KA4BdgB,OAAS,WACR,OAAOjB,EAAKQ,KAAKU,WA7BJjB,KAgCdkB,UAAY,SAACd,GACZ,OAAOL,EAAKQ,KAAKY,uBAAuBf,IAjC3BJ,KAoCdoB,WAAa,SAACC,GACV,OAAOtB,EAAKQ,KAAKe,YAAYC,eAAeF,IArClCrB,KA0CdwB,WAAa,SAACC,EAAMC,EAAIC,EAAUC,GACjC,GAAK7B,EAAKQ,KAAKe,YAAf,CACA,IACIO,EADQ9B,EAAK+B,GAAGC,IAAI,WACJC,OAGhBC,EAAIL,EAAMpC,IAAcD,IAC5B,OAAOsC,EAAQK,IAAK,CACnBT,MAAMA,EACNC,IAAIA,EACJC,SAASA,EACTpC,KAAM0C,MArDMjC,KAyDdmC,YAAc,SAACC,EAAQC,GAEtB,GADAC,QAAQC,IAAIH,EAASC,GAChBtC,EAAKQ,KAAKe,YAAf,CAGA,IACIkB,EADOzC,EAAK+B,GAAGC,IAAI,gBACGC,OAAOS,IACjCH,QAAQC,IAAI,aACZD,QAAQC,IAAIC,GACZ,IAAIE,EAAM3C,EAAKQ,KAAKe,YAAYoB,IAC5BpC,EAAOP,EAAKQ,KAAKe,YAAYV,YAC7B+B,EAAU,GAiBd,OAbAA,EAAQ,qBAAuBP,EAAU,IAAMI,GAC9C,CAACH,SAASA,EAAUzD,KAAK8D,EAAKE,SAAStC,EAAMuC,MAAM5C,OAAA6C,EAAA,EAAA7C,CAAA,GAAGyC,GAAK,GAAOD,IAAID,GAEvEG,EAAQ,qBAAuBP,EAAU,IAAMI,GAC9C,CAACH,SAASA,EAAUzD,KAAK8D,EAAKE,SAAStC,EAAMuC,MAAM5C,OAAA6C,EAAA,EAAA7C,CAAA,GAAGyC,GAAK,GAAOD,IAAID,GAEvEG,EAAQ,UAAYD,EAAM,YAAcN,EAAU,gBAAkBI,IAAmB,EAEvFG,EAAQ,gBAAkBH,GACzB,CAACH,SAASA,EAAUzD,KAAK8D,EAAKE,SAAStC,EAAMmC,IAAID,EAAgBO,MAAMX,GAExEE,QAAQC,IAAII,GACZ5C,EAAK+B,GAAGC,MAAMiB,OAAOL,GACdH,IArFMxC,KAwFdiD,UAAY,SAACC,EAAQC,EAAYC,GAGhC,IAFA,IAAIC,EAAOtD,EAAK+B,GAAGC,IAAI,SAAWmB,EAAS,gBAAkBC,EAAa,UACtER,EAAU,GACLW,EAAE,EAAEA,EAAEF,EAAME,IAAK,CACzB,IAAIC,EAAUC,IAAKC,KAAKC,OAAO,EAAE,IAC7BC,EAAKC,KAAKC,UAAY,GAC1BlB,EAAQY,GAAWI,EAEpBrB,QAAQC,IAAII,GACZU,EAAKL,OAAOL,IAjGC3C,KAqGd8D,KAAO,SAAC1B,EAASe,EAAYY,GAE5B,GADAzB,QAAQC,IAAIH,EAASe,EAAYY,GAC5BhE,EAAKQ,KAAKe,YAAf,CAEA,IAAI+B,EAAOtD,EAAK+B,GAAGC,IAAI,oBAAsBK,EAAU,IAAMe,EAAa,UACtET,EAAM3C,EAAKQ,KAAKe,YAAYoB,IAChCW,EAAKL,OAAL/C,OAAA6C,EAAA,EAAA7C,CAAA,GAAcyC,EAAKqB,MA3GN/D,KA8GdgE,YAAc,WAMb,OAJcjE,EAAK+B,GAAGC,IAAI,WACzBkC,aAAa,QACbC,QAAQ3E,KACR4E,KAAK,UAnHOnE,KA4HdoE,qBAAuB,SAAC1B,GAEvB,OAAO3C,EAAK+B,GAAGC,IAAI,SAAWW,GAAKyB,KAAK,UA9H3BnE,KAiIdqE,kBAAoB,SAACC,GAEpB,OAAOvE,EAAK+B,GAAGC,IAAI,gBAAkBuC,GAAOH,KAAK,UAnIpCnE,KAuIduE,uBAAyB,SAACC,GACzB,OAAOzE,EAAK+B,GAAGC,IAAI,qBAAuByC,GAAeL,KAAK,UAxIjDnE,KA2IdyE,aAAe,SAACvB,GAEf,OAAOnD,EAAK+B,GAAGC,IAAI,YAAcmB,GAAQiB,KAAK,UA5I9CO,IAAIC,cAAc7F,GAClBkB,KAAKO,KAAOmE,IAAInE,OAChBP,KAAK8B,GAAK4C,IAAIE,WACd5E,KAAK6E,MAAQ7E,KAAKO,KAAKuE,mBAAmB,SAAAlG,GACrCA,GACHmG,EAAMC,SAASrG,EAAYC,IAE5BmB,EAAK8E,8DAKN,OAAO7E,KAAKO,KAAKe,YAActB,KAAKO,KAAKe,YAAYlB,MAAQ,mDA2GxC8C,EAAQ+B,GAC7B,OAAOjF,KAAK8B,GAAGC,IAAI,oBAAsBmB,GAAQiB,KAAK,kBCnHzCe,kBA5Bf,SAAqBC,EAAOC,GAC3B,OAAQA,EAAOvG,MACd,IAAK,eACJ,OAAOoB,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,EAAX,CAAkBvG,KAAKwG,EAAOxG,OAC/B,IAAK,gBACJ,OAAOqB,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,EAAX,CAAkBvG,KAAK,KAAM0G,OAAO,OACrC,IAAK,mBACJ,OAAOrF,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,EAAX,CAAkBI,MAAMH,EAAOI,OAChC,IAAK,gBACJ,OAAOvF,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,EAAX,CAAkBI,MAAOJ,EAAMI,MAAME,OAAO,SAAApC,GAAI,OAAEA,EAAKH,SAASkC,EAAOlC,WACxE,IAAK,cAEJ,OADAZ,QAAQC,IAAI4C,GACLlF,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,EAAX,CAAkBI,MAAOJ,EAAMI,MAAMG,IAAI,SAAAC,GAAO,OAC/CA,EAAQzC,SAASkC,EAAOlC,OAASyC,EAAjC1F,OAAAoF,EAAA,EAAApF,CAAA,GACO0F,EADP,CACgBlE,MAAM2D,EAAOQ,SAAUlE,IAAI0D,EAAOS,aAEpD,QACC,OAAOV,IAIF,CACNvG,KAAM,KACN2G,MAAM,GACNO,SAAU,IAAIhG,EACdiG,WAAY,CAAC,UAAU,SAAS,kECxB5BC,uLAEQ,IAAAjG,EAAAC,KACZA,KAAKiG,MAAMH,SAASjF,MAAM,KAAK,MAAMJ,KAAK,SAAAC,GACzCX,EAAKkG,MAAMC,SAASxF,EAAI9B,MACxBmB,EAAKkG,MAAME,QAAQnE,KAAK,wCAIzB,OACCoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACnBH,EAAAC,EAAAC,cAAA,oEAGAF,EAAAC,EAAAC,cAAA,8LAOAF,EAAAC,EAAAC,cAAA,4HAEcF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,6BAFd,YAGIL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,UAHJ,wBAKAL,EAAAC,EAAAC,cAAA,yDAECF,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAK2G,WAAWC,KAAK5G,OAAtC,uBAFD,2JA5BkB6G,IAAMC,WA0CbC,cAFJ,SAAC5B,GAAD,MAAY,CAACW,SAASX,EAAMW,WAC5B,SAACd,GAAD,MAAiB,CAACkB,SAAW,SAACtH,GAAD,OAAUoG,EAASrG,EAAYC,OACxDmI,CAAmBf,GCzC5BgB,cACL,SAAAA,EAAYf,GAAO,IAAAlG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgH,IAClBjH,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAA+G,GAAAG,KAAAnH,KAAMiG,KACDd,MAAQ,CAAC/E,MAAM,GAAIC,KAAK,GAAI+G,MAAM,MAFrBrH,sEAIZsH,GAAO,IAAAC,EAAAtH,KACbqH,EAAME,iBACNvH,KAAKiG,MAAMH,SAASjF,MAAMb,KAAKmF,MAAM/E,MAAOJ,KAAKmF,MAAM9E,MACrDI,KAAK,SAAAC,GACL4G,EAAKE,SAAS,CAACpH,MAAM,GAAGC,KAAK,KAC7BiH,EAAKrB,MAAMC,SAASxF,EAAI9B,MACxB0I,EAAKrB,MAAME,QAAQnE,KAAK,OAExByF,MAAM,SAAAL,qCAKFC,GACNrH,KAAKwH,SAALvH,OAAA6C,EAAA,EAAA7C,CAAA,GAAgBoH,EAAMK,OAAOpH,KAAM+G,EAAMK,OAAOC,6CAGpC,IAAAC,EAAA5H,KACZA,KAAKiG,MAAMH,SAASjF,MAAM,KAAK,MAAMJ,KAAK,SAAAC,GACzCkH,EAAK3B,MAAMC,SAASxF,EAAI9B,MACxBgJ,EAAKJ,SAAS,CAACpH,MAAM,GAAGC,KAAK,GAAIwH,SAAQ,IACzCD,EAAK3B,MAAME,QAAQnE,KAAK,wCAKzB,OACAoE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBuB,SAAU9H,KAAK+H,OAAOnB,KAAK5G,OAC7DoG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOhG,KAAK,QAAQiG,UAAU,eAAeoB,MAAO3H,KAAKmF,MAAM/E,MAAO4H,SAAUhI,KAAKiI,OAAOrB,KAAK5G,QACjGoG,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOzH,KAAK,WAAWyB,KAAK,OAAOiG,UAAU,eAAeoB,MAAO3H,KAAKmF,MAAM9E,KAAM2H,SAAUhI,KAAKiI,OAAOrB,KAAK5G,QAC/GoG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAlB,UACCvG,KAAKmF,MAAMiC,MAAOhB,EAAAC,EAAAC,cAAA,SAAItG,KAAKmF,MAAMiC,MAAMc,SAAe,KACvD9B,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAT,eAC1BL,EAAAC,EAAAC,cAAA,UAAQzH,KAAK,SAAS0H,UAAU,eAAeG,QAAS1G,KAAK2G,WAAWC,KAAK5G,OAA7E,6BAzCqB6G,IAAMC,WAmD1BqB,EAAYpB,YANM,SAAS5B,GAAQ,OAAOlF,OAAAoF,EAAA,EAAApF,CAAA,GAAIkF,IACzB,SAASH,GACjC,MAAO,CACNkB,SAAW,SAACtH,GAAD,OAAUoG,EAASrG,EAAYC,OAG5BmI,CAA6CC,GAE9CoB,EADDC,YAAWF,GCtDnBG,cACL,SAAAA,EAAYrC,GAAO,IAAAlG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsI,IAClBvI,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAAqI,GAAAnB,KAAAnH,KAAMiG,KACDd,MAAQ,CAAC/E,MAAM,GAAIC,KAAK,GAAIO,YAAY,IAF3Bb,sEAIZsH,GAAO,IAAAC,EAAAtH,KACbqH,EAAME,iBACNjF,QAAQC,IAAI,UACZD,QAAQC,IAAIvC,KAAKiG,MAAMH,UACvB9F,KAAKiG,MAAMH,SACT3F,WAAWH,KAAKmF,MAAM/E,MAAOJ,KAAKmF,MAAM9E,KAAML,KAAKmF,MAAMvE,aACxDH,KAAK,SAAA8H,GACLjG,QAAQC,IAAI,kBACZ+E,EAAKE,SAAS,CAACpH,MAAM,GAAIC,KAAK,GAAI+G,MAAM,OACxCE,EAAKrB,MAAME,QAAQnE,KAAK,WAEzByF,MAAM,SAAAL,GACLE,EAAKE,SAAS,CAAEJ,2CAGbC,GACNrH,KAAKwH,SAALvH,OAAA6C,EAAA,EAAA7C,CAAA,GAAgBoH,EAAMK,OAAOpH,KAAM+G,EAAMK,OAAOC,yCAGhD,OACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,yBAEAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBuB,SAAU9H,KAAK+H,OAAOnB,KAAK5G,OAC7DoG,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SAAOhG,KAAK,cAAciG,UAAU,eAAeoB,MAAO3H,KAAKmF,MAAMvE,YAAaoH,SAAUhI,KAAKiI,OAAOrB,KAAK5G,QAC7GoG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOhG,KAAK,QAAQiG,UAAU,eAAeoB,MAAO3H,KAAKmF,MAAM/E,MAAO4H,SAAUhI,KAAKiI,OAAOrB,KAAK5G,QACjGoG,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOzH,KAAK,WAAWyB,KAAK,OAAOiG,UAAU,eAAeoB,MAAO3H,KAAKmF,MAAM9E,KAAM2H,SAAUhI,KAAKiI,OAAOrB,KAAK5G,QAC/GoG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAlB,WAEAvG,KAAKmF,MAAMiC,MACXhB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oBACCtG,KAAKmF,MAAMiC,MAAMc,SAElB,aA5CoBrB,IAAMC,WAkDhB0B,EADIzB,YADG,SAAC5B,GAAD,MAAY,CAACW,SAASX,EAAMW,WAC/BiB,CAAyBsB,YAAWC,ICnDxCG,EADM,SAAClD,GAAD,MAAY,CAAC1G,KAAK,mBAAoB2G,KAAKD,YCEjDmD,EAFI,SAACxF,GAAD,MAAa,CAACrE,KAAM,gBAAiBqE,OAAQA,ICSjDyF,EATE,SAACzF,EAAOzB,EAAMC,GAAd,MAChB,CACC7C,KAAM,cACNqE,OAAQA,EACR0C,SAASnE,EACToE,OAAOnE,ICFHkH,6MAgDL9E,KAAO,SAACC,GACPhE,EAAKkG,MAAMH,SAAShC,KAAK/D,EAAKkG,MAAM/C,OAAQnD,EAAKkG,MAAM4C,GAAGpG,IAAKsB,GAC/DhE,EAAKkG,MAAMnC,KAAKC,4EA/ChB,IAAI+E,EAAO9I,KAAKiG,MAAM4C,GAAGhG,MAAM7C,KAAKiG,MAAMvD,KACtCoB,GACK,IAAPgF,EAAc,GACP,IAAPA,GAAgB,EAAI,EACtB,OACE1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YAAO,IAAItG,KAAKiG,MAAM4C,GAAGE,MAAM,OAC/B3C,EAAAC,EAAAC,cAAA,YAAOtG,KAAKiG,MAAM4C,GAAGxG,WAEvB+D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,SAASzG,KAAKiG,MAAM4C,GAAGjK,MAAOoB,KAAKiG,MAAM4C,GAAGjG,UACpD5C,KAAKiG,MAAMvD,KACX0D,EAAAC,EAAAC,cAAA,QAAM0C,MAAO,CAACC,WAAW,QACxB7C,EAAAC,EAAAC,cAAA,qBACCtG,KAAKkJ,QAAQpF,sCAOdA,GAAM,IAAAwD,EAAAtH,KACb,OAAW,IAAP8D,EAEHsC,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,MAAK,IAAOyC,UAAU,eAAhD,KACAH,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,MAAK,IAAQyC,UAAU,eAAjD,MAGc,IAAPzC,EAERsC,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,KAAK,OAAOyC,UAAU,qBAAhD,KACAH,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,MAAK,IAAQyC,UAAU,eAAjD,MAKDH,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,MAAK,IAAOyC,UAAU,eAAhD,KACAH,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAIY,EAAKxD,KAAK,OAAOyC,UAAU,qBAAhD,aA5CkBM,IAAMC,WA2DbC,cALJ,SAAA5B,GAAK,MAAG,CAClBW,SAASX,EAAMW,SACfpD,IAAKyC,EAAMvG,KAAMuG,EAAMvG,KAAK8D,IAAK,OAGnBqE,CAAc6B,GCpDvBO,cACJ,SAAAA,EAAYlD,GAAO,IAAAlG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAmJ,IACjBpJ,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAAkJ,GAAAhC,KAAAnH,KAAMiG,KACDd,MAAQ,CAACiE,UAAUrJ,EAAKkG,MAAMmD,UAAUvJ,MAAM,EAAEE,EAAKkG,MAAMoD,OAF/CtJ,sEAKZ0B,GACL,GAAKA,EAAL,CACA,IAAI6H,EAAStJ,KAAKiG,MAAMH,SAAS3D,YAAYnC,KAAKiG,MAAM/C,OAAQzB,GAE5D8H,EAAQ,CAAClH,SAASZ,EACT7C,KAAKoB,KAAKiG,MAAMrH,KAAK8D,IACrBE,SAAS5C,KAAKiG,MAAMrH,KAAKgC,YACzB6B,IAAI6G,EACJP,MAAM,EACNlG,MAAM5C,OAAA6C,EAAA,EAAA7C,CAAA,GAAGD,KAAKiG,MAAMrH,KAAK8D,KAAK,IAC3C1C,KAAKwH,SAAS,CAAC4B,UAAUpJ,KAAKmF,MAAMiE,UAAUI,OAAO,CAACD,oCAEnDpG,EAAYY,GAEf,IADA,IAAIwF,EAAQvJ,KAAKmF,MAAMiE,UAAUvJ,MAAM,GAC9ByD,EAAE,EAAGA,EAAEtD,KAAKmF,MAAMiE,UAAUK,OAAQnG,IAC3C,GAAItD,KAAKmF,MAAMiE,UAAU9F,GAAGb,MAAQU,EAAY,CAC9C,IAAI2F,EAAO9I,KAAKmF,MAAMiE,UAAU9F,GAChCwF,EAAKjG,MAAM7C,KAAKiG,MAAMrH,KAAK8D,KAAOqB,EAClC,IACIgF,EAAQ9I,OAAOyJ,OAAOZ,EAAKjG,OAAO8G,OADxB,SAACZ,EAAOa,GAAR,OAAeb,IAAe,IAANa,EAAW,GAAS,IAANA,GAAa,EAAE,IACd,GACrDd,EAAKC,MAAMA,EACXQ,EAAMjG,GAAKwF,EAGf9I,KAAKwH,SAAS,CAAC4B,UAAUG,qCAElB,IAAAjC,EAAAtH,KAEP,OACEoG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,WAAazG,KAAKiG,MAAM/C,OAAQqD,UAAU,kBAAmBvG,KAAKiG,MAAM4D,UAEnF7J,KAAKmF,MAAMiE,UAAU1D,IAAI,SAAArD,GAAQ,OAC9B+D,EAAAC,EAAAC,cAACwD,EAAD,CACErH,IAAKe,IAAKC,KACV8C,UAAU,eACVrD,OAAQoE,EAAKrB,MAAM/C,OACnB2F,GAAIxG,EACJyB,KAAMwD,EAAKxD,KAAK8C,KAAKU,EAAMjF,EAASI,SAM1CzC,KAAKiG,MAAMrH,MACTwH,EAAAC,EAAAC,cAACyD,EAAD,CAAehC,OAAQ/H,KAAK+H,OAAOnB,KAAK5G,gBApD/B6G,IAAMC,WA4DrBkD,EAAgB,SAAC/D,GAAU,IAAAgE,EACHC,oBAAS,GADNC,EAAAlK,OAAAmK,EAAA,EAAAnK,CAAAgK,EAAA,GACxBI,EADwBF,EAAA,GAChBG,EADgBH,EAAA,GAE7B,OACE/D,EAAAC,EAAAC,cAAA,WAEI+D,EAAQjE,EAAAC,EAAAC,cAACiE,EAAD,CAAQxC,OAAQ9B,EAAM8B,OAAQyC,OAAQ,kBAAIF,GAAU,MAC1DlE,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAI4D,GAAU,KAA/B,oBAMNG,EAAS,SAAAxE,GACX,IAAIyE,EAAW7D,IAAM8D,YACrB,OACIvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,YAAUvE,IAAK2I,EAAUpK,KAAK,QAAQ0I,MAAO,CAAC4B,MAAM,MAAOC,OAAQ,UAErEzE,EAAAC,EAAAC,cAAA,UAAQI,QAAS,WAAKT,EAAM8B,OAAO2C,EAASI,QAAQnD,OAAO1B,EAAMuE,WAAjE,UACApE,EAAAC,EAAAC,cAAA,UAAQI,QAAST,EAAMuE,QAAvB,YAaOnC,cAAWtB,YARf,SAAA5B,GAAK,MAAG,CACjBW,SAASX,EAAMW,SACflH,KAAMuG,EAAMvG,OAEH,SAAAoG,GAAQ,MAAI,CACrB+F,cAAe,SAACC,GAAD,OAAOhG,EAAS0D,EAAasC,KAC5CC,YAAa,SAACD,EAAGvJ,EAAMC,GAAV,OAAgBsD,EAAS2D,EAAWqC,EAAGvJ,EAAMC,OAElCqF,CAAmBoC,ICpE9B+B,EArBE,SAACjF,GAChB,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAY,SACbN,EAAMkF,MAAMzF,IAAI,SAAA0F,GAAI,OACpBhF,EAAAC,EAAAC,cAAC+E,EAAD,CACG5I,IAAKe,IAAKC,KACVP,OAAUkI,EAAKlI,OACfvB,SAAUyJ,EAAKzJ,SACfkI,QAASuB,EAAK3J,MACd6J,UAAWF,EAAKE,UAChBlC,UAAWgC,EAAKhC,UAChBC,KAAMpD,EAAMoD,KAAKpD,EAAMoD,KAAK,EAC5B3H,IAAK0J,EAAK1J,WCPP6J,EApBK,SAACC,GAEpB,IAAKA,EAAa,MAAO,GACzB,IAAIpC,EAAYnJ,OAAOwL,KAAKD,GAC3B9F,IAAI,SAAAjD,GACJ,IAAIJ,EAAWmJ,EAAY/I,GAMtBJ,EAASQ,QAAOR,EAASQ,MAAQ,IACtC,IAAIkG,EAAQ9I,OAAOyJ,OAAOrH,EAASQ,OAAO8G,OAN5B,SAASZ,EAAOa,GAC7B,OAAIA,EAAYb,EAAM,GACP,IAANa,EAAoBb,EAAM,EAC5BA,GAGiD,GAGzD,OAFA1G,EAAS0G,MAAMA,EACf1G,EAASI,IAAIA,EACNJ,IAGR,OADA+G,EAAUsC,KAAM,SAACrF,EAAEsF,GAAH,OAAOA,EAAE5C,MAAM1C,EAAE0C,QAC1BK,GCXFwC,cACL,SAAAA,EAAY3F,GAAO,IAAAlG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA4L,IAClB7L,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAA2L,GAAAzE,KAAAnH,KAAMiG,KAGDd,MAAQ,CAACqG,YAAY,MAJRzL,mFAOC,IAAAuH,EAAAtH,KACf6L,EAAU,KACVJ,EAAO,KACXzL,KAAKiG,MAAMH,SAAS9B,cACnBvD,KAAK,SAAAC,GAAG,OAAEA,EAAIoL,QACdrL,KAAK,SAAAsL,GACL,GAAKA,EAAL,CACAF,EAAUE,EAEV,IAAIC,GADJP,EAAOxL,OAAOwL,KAAKM,IACHrG,IAAI,SAAAuG,GAAC,OAAE3E,EAAKrB,MAAMH,SAASoG,sBAAsBD,KACjE,OAAOE,QAAQC,IAAIJ,MAEnBvL,KAAK,SAAA4L,GAAO,OAAIA,EAAQ3G,IAAI,SAAA4G,GAAC,OAAEA,EAAER,UACjCrL,KAAK,SAAA+K,GACL,IAAIQ,EAAOR,EAAY9F,IAAK,SAAC6G,EAAIC,GAChC,OAAOvM,OAAA6C,EAAA,EAAA7C,CAAA,GAAEwL,EAAKe,GAAQD,KAEnBhH,EAAQkG,EAAK/F,IAAI,SAACjD,EAAI+J,GACzB,IAAIC,EAAIZ,EAAQpJ,GAEhB,GADAgK,EAAEvJ,OAAOT,EACLuJ,EAAKQ,GAAQ,CAChB,IAAIpD,EAAY4C,EAAKQ,GAAOvM,OAAOwL,KAAKO,EAAKQ,IAAQ,IACrDC,EAAErD,UAAYmC,EAAcnC,QAG5BqD,EAAErD,UAAY,GAEf,OAAOqD,IAERnF,EAAKrB,MAAMyG,SAASnH,KAEpBkC,MAAM,SAAAkF,GAAC,OAAErK,QAAQC,IAAIoK,sCAItB,OACCvG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,2BACOtG,KAAKiG,MAAMH,SAASvF,KAAKe,YAAa8E,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,QAAT,kBAAwC,KACrFL,EAAAC,EAAAC,cAACsG,EAAD,CAAUzB,MAAOnL,KAAKiG,MAAMV,gBA/CTsB,IAAMC,WA6DdC,cARJ,SAAA5B,GACV,MAAO,CACNW,SAASX,EAAMW,SACfP,MAAMJ,EAAMI,QAEH,SAAAP,GAAQ,MAAK,CACvB0H,SAAU,SAACnH,GAAWP,EAASyD,EAAelD,OAEhCwB,CAAoB6E,GC1DpBiB,mLANP,OACRzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,uCAJuBO,IAAMC,WCGxBgG,gOAeJ,OACC1G,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAACsG,EAAD,CAAUG,eAAe,EAAM5B,MAAOnL,KAAKiG,MAAMV,gBAnB9BsB,IAAMC,WA8BdC,cANJ,SAAA5B,GACV,MAAO,CAACI,MAAMJ,EAAMI,QAEV,SAAAP,GAAQ,MAAK,CACvB0H,SAAU,SAACnH,GAAD,OAAWP,EAASyD,EAAelD,OAE/BwB,CAAoB+F,GC7B7BE,cACL,SAAAA,IAAc,IAAAjN,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgN,IACbjN,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAA+M,GAAA7F,KAAAnH,QACKmF,MAAQ,CAAC8H,wBAAwB,MAFzBlN,mFAWM,IAAAuH,EAAAtH,KACfpB,EAAOoB,KAAKiG,MAAMiH,MAAMC,OAAOvO,KACnCoB,KAAKiG,MAAMH,SAAS1B,qBAAqBxF,GACxC6B,KAAK,SAAAC,GAAG,OAAIA,EAAIoL,QAChBrL,KAAK,SAAA8E,GAGL,GAFAjD,QAAQC,IAAIgD,GAEPA,GAAUA,EAAMsG,QAArB,CAEA,IAAIuB,EAAsB7H,EAAMsG,QAC5BwB,EAAapN,OAAOwL,KAAK2B,GAEzBE,EAAcD,EAAW3H,IAAI,SAAAjD,GAEhC,OADWxC,OAAOwL,KAAK2B,EAAoB3K,GAAK+I,aACpC9F,IAAI,SAAApB,GAAK,OAAI7B,EAAM,IAAM6B,MAErCiJ,OACA7H,IAAI,SAAAuG,GAAC,OAAE3E,EAAKrB,MAAMH,SAASvB,uBAAuB0H,KAEnDE,QAAQC,IAAIkB,GACX7M,KAAK,SAAAC,GAAG,OAAIA,EAAIgF,IAAI,SAAA6G,GACpB,IAAIiB,EAAOjB,EAAIxK,IAAIyL,KAAKC,WAAWC,MAAM,KAEzC,MAAO,CADOF,EAAKA,EAAK/D,OAAO,GACd8C,EAAIT,WAErBrL,KAAK,SAAA+K,GACL,IAAIK,EAAU,GACdL,EAAYmC,QAAQ,SAAApB,GACdV,EAAQU,EAAI,IAIhBV,EAAQU,EAAI,IAAIvK,KAAKuK,EAAI,IAHzBV,EAAQU,EAAI,IAAM,CAACA,EAAI,MAMzB,IAAIqB,EAAiBP,EAAW3H,IAAI,SAAAuG,GAAC,OAAE3E,EAAKrB,MAAMH,SAASrB,aAAawH,KACxEE,QAAQC,IAAIwB,GACXnN,KAAK,SAAAC,GAAG,OAAEA,EAAIgF,IAAI,SAAA3C,GAAK,MAAE,CAACA,EAAMN,IAAKM,EAAM+I,WAC3CrL,KAAK,SAAAoN,GACLvL,QAAQC,IAAIsL,GACZ,IAAI1C,EAAQ,GACZ0C,EAAWF,QAAQ,SAAA5K,GAClB,IAAIN,EAAMM,EAAM,GACZ+F,EAAO+C,EAAQpJ,GACnBoJ,EAAQpJ,GAAOM,EAAM,GACrB8I,EAAQpJ,GAAK2G,UAAYmC,EAAczC,GACvC+C,EAAQpJ,GAAKS,OAAOT,EACpB0I,EAAMnJ,KAAK6J,EAAQpJ,MAEpB6E,EAAKE,SAAS,CAACyF,wBAAwB9B,4CAO1C,OAAKnL,KAAKmF,MAAM8H,wBACT7G,EAAAC,EAAAC,cAACsG,EAAD,CAAUzB,MAAOnL,KAAKmF,MAAM8H,wBAAyB5D,KAAM,MADlBjD,EAAAC,EAAAC,cAAA,mBApE3BO,IAAMC,WA8EdC,cANJ,SAAA5B,GACV,MAAO,CAACW,SAASX,EAAMW,WAEb,SAAAd,GAAQ,MAAK,CACvB0H,SAAU,SAACnH,GAAD,OAAWP,EAASyD,EAAelD,OAE/BwB,CAAoBiG,GCvEpBc,GAbA,CACV,CAAC,YAAY,qBAAqB,WAClC,CAAC,aAAa,qBAAqB,WACnC,CAAC,4BAA4B,qBAAqB,WAClD,CAAC,aAAa,qBAAqB,WACnC,CAAC,YAAY,qBAAqB,WAClC,CAAC,0BAA0B,qBAAqB,WAChD,CAAC,eAAe,qBAAqB,WACrC,CAAC,qBAAqB,qBAAqB,WAC3C,CAAC,WAAW,qBAAqB,WACjC,CAAC,aAAa,qBAAqB,WACnC,CAAC,eAAe,qBAAqB,YCLpCC,GAAa,SAASC,GACxB,OAAO,GAGLC,8MAEJzD,OAAS,SAACmC,GACRA,EAAEpF,iBACFxH,EAAKkG,MAAME,QAAQnE,KAAK,YA8B1B+F,OAAS,SAAC4E,GAER,GADAA,EAAEpF,iBACEoF,EAAEjF,OAAOhG,IAAIiG,OAASgF,EAAEjF,OAAOjG,MAAMkG,MAAO,CAC9C,IAAKoG,GAAWpB,EAAEjF,OAAOhG,IAAIiG,OAG3B,YADArF,QAAQC,IAAI,eAHgC,IAAA2L,EAMxB,CAACvB,EAAEjF,OAAOjG,MAAMkG,MAAOgF,EAAEjF,OAAOhG,IAAIiG,MAAOgF,EAAEjF,OAAO/F,SAASgG,OAA9ElG,EANyCyM,EAAA,GAMnCxM,EANmCwM,EAAA,GAM/BC,EAN+BD,EAAA,GAO9CnO,EAAKkG,MAAMH,SAAStE,WAAWC,EAAMC,EAAIyM,GACzCpO,EAAKkG,MAAME,QAAQnE,KAAK,sFAtChB,IAAAsF,EAAAtH,KACVsC,QAAQC,IAAI,cACZvC,KAAKiG,MAAMV,MAAMoI,QAAQ,SAAAtK,GACvBf,QAAQC,IAAIc,EAAKmI,aACZnI,EAAKmI,aACVvL,OAAOwL,KAAKpI,EAAKmI,aAAamC,QAAQ,SAAApB,GACpCjF,EAAKrB,MAAMH,SAAS7C,UAAUI,EAAKH,OAAQqJ,EAAK,2CAK3C,IAAA3E,EAAA5H,KACTsC,QAAQC,IAAI,aACZvC,KAAKiG,MAAMV,MAAMoI,QAAQ,SAAAtK,GACvBf,QAAQC,IAAIc,GACZ,CAAC,EAAE,EAAE,GAAGsK,QAAQ,SAAA1I,GAAG,OAAI2C,EAAK3B,MAAMH,SAAS3D,YAAYkB,EAAKH,OAAQ,kBAAoB+B,gDAI3E,IAAAmJ,EAAApO,KACb8N,GAASH,QAAQ,SAAAtH,GAAC,OAAE+H,EAAKnI,MAAMH,SAAStE,WAAW6E,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAAG,KAClErG,KAAKiG,MAAME,QAAQnE,KAAK,wCAErB,IAAAqM,EAAArO,KACH8N,GAASH,QAAQ,SAAAtH,GAAC,OAAEgI,EAAKpI,MAAMH,SAAStE,WAAW6E,EAAE,GAAGA,EAAE,GAAGA,EAAE,MAC/DrG,KAAKiG,MAAME,QAAQnE,KAAK,0CAoBnB,IAKDsM,EALCC,EAAAvO,KACL,OAAKA,KAAKiG,MAAMrH,MAQd0P,EADEtO,KAAKiG,MAAMkH,QAAUnN,KAAKiG,MAAMkH,OAAOxL,SAErCyE,EAAAC,EAAAC,cAAA,UAAQhG,KAAK,YACX8F,EAAAC,EAAAC,cAAA,UAAQqB,MAAO3H,KAAKiG,MAAMkH,OAAOxL,UAC9B3B,KAAKiG,MAAMkH,OAAOxL,UAGnB3B,KAAKiG,MAAMF,WACVN,OAAO,SAAAnF,GAAI,OAAIA,IAASiO,EAAKtI,MAAMkH,OAAOxL,WAC1C+D,IAAI,SAAApF,GAAI,OAAI8F,EAAAC,EAAAC,cAAA,UAAQ7D,IAAKe,IAAKC,KAAMkE,MAAOrH,GAAOA,EAAtC,QASnB8F,EAAAC,EAAAC,cAAA,UAAQhG,KAAK,YACNN,KAAKiG,MAAMF,WAAWL,IAAI,SAAApF,GAAI,OAC7B8F,EAAAC,EAAAC,cAAA,UAAQ7D,IAAKe,IAAKC,KAAMkE,MAAOrH,GAAOA,MAOhD8F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAKwO,KAAK5H,KAAK5G,OAAhC,8BACAoG,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAKyO,eAAe7H,KAAK5G,OAA1C,kBACAoG,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAK0O,SAAS9H,KAAK5G,OAApC,6CACAoG,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAKiD,UAAU2D,KAAK5G,OAArC,6BAGFoG,EAAAC,EAAAC,cAAA,QAAMqI,aAAa,MAAMvJ,OAAO,GAAG0C,SAAY9H,KAAK+H,QAClD3B,EAAAC,EAAAC,cAAA,YAAUC,UAAU,mBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SAGAH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeqI,WAAW,EAAMtO,KAAK,QAAQuO,YAAY,UAC7EzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,4CAKFH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,mBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,OAGAH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAejG,KAAK,MAAMuO,YAAY,QAC1DzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gDAIFH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,mBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,oBAGC+H,GAEHlI,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACfH,EAAAC,EAAAC,cAAA,UAAQzH,KAAK,UAAb,UACAuH,EAAAC,EAAAC,cAAA,UAAQI,QAAS1G,KAAKwK,QAAtB,eAvENxK,KAAKiG,MAAME,QAAQnE,KAAK,UACjB,aAtDO6E,IAAMC,WAsIbuB,eAAWtB,YAFF,SAAA5B,GAAK,MAAK,CAACI,MAAMJ,EAAMI,MAAOQ,WAAWZ,EAAMY,WAAYnH,KAAKuG,EAAMvG,KAAMkH,SAASX,EAAMW,WAEzFiB,CAAyBkH,KC5I7Ca,eAKL,SAAAA,EAAY7I,GAAM,IAAAlG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA8O,IACjB/O,EAAAE,OAAAgH,EAAA,EAAAhH,CAAAD,KAAAC,OAAAiH,EAAA,EAAAjH,CAAA6O,GAAA3H,KAAAnH,KAAMiG,KACDd,MAAQ,CAACiG,KAAK,MAFFrL,mFAIE,IAAAuH,EAAAtH,KACfoC,EAAUpC,KAAKiG,MAAMiH,MAAMC,OAAOjK,OACtCiJ,QAAQC,IACP,CAACpM,KAAKiG,MAAMH,SAASoG,sBAAsB9J,EAAQ,KACnDpC,KAAKiG,MAAMH,SAASrB,aAAarC,KAEjC3B,KAAK,SAAAC,GACL,IAAIsL,EAAOtL,EAAI,GAAGoL,MACd/I,EAAQrC,EAAI,GAAGoL,MAElB/I,EAAMqG,UADH4C,EACaT,EAAcS,GAGZ,GAEnB1J,QAAQC,IAAIQ,GACZuE,EAAKE,SAAS,CAAC4D,KAAKrI,uCAIrB,IAAK/C,KAAKmF,MAAMiG,KAAM,OAAOhF,EAAAC,EAAAC,cAAA,iBAC7B,IAAI8E,EAAOpL,KAAKmF,MAAMiG,KACtB,OAAOhF,EAAAC,EAAAC,cAAA,UACNF,EAAAC,EAAAC,cAAC+E,EAAD,CACSnI,OAAUlD,KAAKiG,MAAMiH,MAAMC,OAAOjK,OAClCvB,SAAUyJ,EAAKzJ,SACfkI,QAASuB,EAAK3J,MACd6J,UAAWF,EAAKE,UAChBlC,UAAWgC,EAAKhC,UAChBC,KAAM,IACN3H,IAAK0J,EAAK1J,cAvCDmF,IAAMC,WAiDZC,eALJ,SAAA5B,GACV,MAAO,CACNW,SAASX,EAAMW,WAGFiB,CAAc+H,ICqCd/H,mBAXf,SAAc5B,EAAO4J,GACpB,MAAO,CACNjJ,SAASX,EAAMW,SACflH,KAAMuG,EAAMvG,KAAOuG,EAAMvG,KAAKgC,aAAe,YAAe,KAC5D8B,IAAIyC,EAAMvG,KAAKuG,EAAMvG,KAAK8D,IAAI,OAEhC,SAAcsM,GACb,MAAO,CACNC,SAAU,kBAAID,EAAK,CAACnQ,KAAK,qBAGZkI,CA7Ef,SAAgBd,GAKf,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UACLF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,KACTL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,UAGFH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,SACTL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,UAEC,GAMDN,EAAMrH,KACPwH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,SAAWR,EAAMvD,KAC1B0D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,aAIFH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,UACTL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,aAKEH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACZN,EAAMrH,MAASwH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeN,EAAMrH,OACvDqH,EAAMrH,KACPwH,EAAAC,EAAAC,cAAA,UACLF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BG,QAzC1C,WACZT,EAAMH,SAAS9E,SACfiF,EAAMgJ,aAuCA,YAGK7I,EAAAC,EAAAC,cAAA,UACLF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,WACTL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,eAMLH,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOC,OAAK,EAAC3B,KAAK,IAAI4B,UAAapJ,IACnCI,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,QAAQ4B,UAAaxD,IACjCxF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,aAAa4B,UAAavC,IACtCzG,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,SAAS4B,UAAahH,IAClChC,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,UAAU4B,UAAaC,IACnCjJ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,kBAAkB4B,UAAaN,KAC3C1I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,sBAAsB4B,UAAatC,IAC/C1G,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,cAAc4B,UAAapC,IACvC5G,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAO1B,KAAK,OAAO4B,UAAanB,QC3DrBqB,oLAPb,OACClJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACCJ,EAAAC,EAAAC,cAACiJ,GAAD,cAJc1I,IAAMC,WCMJ0I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzC,MACvB,iECVN0C,IAASC,OACNzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAU/K,MAAOgL,GAChB3J,EAAAC,EAAAC,cAAC0J,GAAD,OAEHC,SAASC,eAAe,SDqHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5P,KAAK,SAAA6P,GACjCA,EAAaC","file":"static/js/main.4575ab97.chunk.js","sourcesContent":["let loginAction = (user) => ({type: 'LOGIN_ACTION', user: user});\n\nexport default loginAction;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport store from './store';\nimport loginAction from './actions/loginAction';\nimport uuid from 'uuid';\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD9hWSw27OO_qk9eRKm2TMJ_09JcdeZdm8\",\n    authDomain: \"bottomshelfnews.firebaseapp.com\",\n    databaseURL: \"https://bottomshelfnews.firebaseio.com\",\n    projectId: \"bottomshelfnews\",\n    storageBucket: \"\",\n    messagingSenderId: \"924993359943\",\n    appId: \"1:924993359943:web:99b6abdc71d38c4316e162\",\n    measurementId: \"G-LRJS1QWZZR\"\n  };\n// TODO: uncomment for actual date\n//let date = () => (new Date()).toJSON().slice(0,10);\nlet date = () => \"2020-01-08\";\nlet yesterday = () => \n\t(new Date(new Date().setDate(new Date().getDate()-1))).toJSON().slice(0,10);\n\nclass Firebase {\n\t// onAuthStateChange is a funciton called whenever a successful login/out occurs\n\tconstructor() {\n\t\tapp.initializeApp(firebaseConfig);\n\t\tthis.auth = app.auth();\n\t\tthis.db = app.database();\n\t\tthis.unsub = this.auth.onAuthStateChanged(user=>{\n\t\t\tif (user) {\n\t\t\t\tstore.dispatch(loginAction(user));\n\t\t\t}\n\t\t\tthis.unsub(); //unsubscribe to auth change - only want this to run once \n\t\t});\n\t}\n\n\temail() {\n\t\treturn this.auth.currentUser ? this.auth.currentUser.email : null;\n\t}\n\n\tcreateUser = (email, pass, name) => {\n\t\treturn this.auth.createUserWithEmailAndPassword(email,pass)\n\t\t.then(res=> res.user.updateProfile({displayName:name}));\n\t}\n\n\tlogin = (email, pass)=> {\n\t\tif (!email || !pass) {\n\t\t\treturn this.auth.signInAnonymously();\n\t\t}\n\t\treturn this.auth.signInWithEmailAndPassword(email, pass);\n\t}\n\n\tlogOut = ()=> {\n\t\treturn this.auth.signOut();\n\t}\n\n\tresetPass = (email) => {\n\t\treturn this.auth.sendPasswordResetEmail(email);\n\t}\n\n\tupdatePass = (newPass) => {\n\t    return this.auth.currentUser.updatePassword(newPass);\n\t}\n\n\t//TODO: 'old' arg is for submitting an article with yesterday's timestamp\n\t// must be removed in production\n\tnewArticle = (title,url,category, old) => {\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\tlet posts = this.db.ref(\"stories\");\n\t\tlet newPost = posts.push();\n\t\t// TODO add timestamp maybe? encoded in fb auto-generated key but cryptic\n\t\t// don't need to save user who submitted article - will be closed to users\n\t\tlet d = old ? yesterday() : date();\n\t\treturn newPost.set( {\n\t\t\ttitle:title,\n\t\t\turl:url,\n\t\t\tcategory:category,\n\t\t\tdate: d\n\t\t});\n\t}\n\n\tnewHeadline = (storyID,headline) => {\n\t\tconsole.log(storyID, headline);\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\t// TODO  This was originally storysubmissions/storyID/newkey\n\t\t// Moved to submissions to guarantee uniqueness - needed??\n\t\tlet post = this.db.ref(\"submissions/\");\n\t\tlet newHeadlineKey = post.push().key;\n\t\tconsole.log(\"push done\");\n\t\tconsole.log(newHeadlineKey);\n\t\tlet uid = this.auth.currentUser.uid;\n\t\tlet name = this.auth.currentUser.displayName;\n\t\tlet updates = {};\n\n\t\t// Logging user's vote in 2 places: /submissions and /users \n\n\t\tupdates['/storysubmissions/' + storyID + '/' + newHeadlineKey] =\n\t\t\t{headline:headline, user:uid, username:name, votes: {[uid]:true}, key:newHeadlineKey};\n\n\t\tupdates['/storysubmissions/' + storyID + '/' + newHeadlineKey] =\n\t\t\t{headline:headline, user:uid, username:name, votes: {[uid]:true}, key:newHeadlineKey};\n\t\t\t\n\t\tupdates['/users/' + uid + '/stories/' + storyID + '/submissions/' + newHeadlineKey ] = true;\n\n\t\tupdates['/submissions/' + newHeadlineKey] = \n\t\t\t{headline:headline, user:uid, username:name, key:newHeadlineKey, story:storyID};\n\n\t\tconsole.log(updates);\n\t\tthis.db.ref().update(updates);\n\t\treturn newHeadlineKey;\n\t}\n\n\tfakeVotes = (postID, headlineID, count) => {\n\t\tlet post = this.db.ref(\"items/\" + postID + \"/submissions/\" + headlineID + \"/votes\");\n\t\tlet updates = {};\n\t\tfor (var i=0;i<count;i++) {\n\t\t\tvar fakeUID = uuid.v4().substr(0,10);\n\t\t\tvar up = Math.random() >= 0.3;\n\t\t\tupdates[fakeUID] = up;\n\t\t} \n\t\tconsole.log(updates);\n\t\tpost.update(updates);\n\t}\n\n\t// v can be true, false or null\n\tvote = (storyID, headlineID, v) => {\n\t\tconsole.log(storyID, headlineID, v);\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\t//console.log(this.auth.currentUser, postID, headlineID);\n\t\tlet post = this.db.ref(\"storysubmissions/\" + storyID + \"/\" + headlineID + \"/votes\");\n\t\tlet uid = this.auth.currentUser.uid;\n\t\tpost.update({[uid]:v});\n\t}\n\n\tgetTopPosts = () => {\n\t\t/* TODO: Filter to most recent 10ish? */\n\t\tlet stories = this.db.ref('stories')\n\t\t.orderByChild('date')\n\t\t.equalTo(date())\n\t\t.once('value');\n\t\treturn stories;\n\t}\n\n\t//TODO IMPORTANT: When you update this to use num, no num arg = all subs\n\tgetSubmissionsForPost(postID, num) {\n\t\treturn this.db.ref('storysubmissions/' + postID).once('value');\n\t}\n\n\tgetSubmissionsByUser = (uid) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('users/' + uid).once('value');\n\t}\n\n\tgetSubmissionByID = (subID) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('/submissions/' + subID).once('value');\n\t}\n\n\t// storyAndSubID looks like \"storyID/subID\"\n\tgetStorySubmissionByID = (storyAndSubID) => {\n\t\treturn this.db.ref('/storysubmissions/' + storyAndSubID).once('value');\n\t}\n\n\tgetStoryByID = (postID) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('/stories/' + postID).once('value');\n\t}\n\n\n}\n\nexport default Firebase;","import { createStore } from 'redux';\nimport Firebase from './Firebase';\n\nfunction mainReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'LOGIN_ACTION':\n\t\t\treturn {...state, user:action.user};\n\t\tcase 'LOGOUT_ACTION':\n\t\t\treturn {...state, user:null, userID:null};\n\t\tcase 'GOT_POSTS_ACTION':\n\t\t\treturn {...state, posts:action.data};\n\t\tcase 'DELETE_ACTION':\n\t\t\treturn {...state, posts: state.posts.filter(post=>post.postID!==action.postID)};\n\t\tcase 'EDIT_ACTION':\n\t\t\tconsole.log(state);\n\t\t\treturn {...state, posts: state.posts.map(oldPost => \n\t\t\t\toldPost.postID!==action.postID ? oldPost \n\t\t\t\t : {...oldPost, title:action.newTitle, url:action.newURL}\n\t\t\t)};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nfunction defaultState() {\n\treturn {\n\t\tuser: null,\n\t\tposts:[],\n\t\tfirebase: new Firebase(),\n\t\tcategories: ['general','sports','politics']\n\t}\n}\nexport default createStore(\n  mainReducer,\n  defaultState()\n );\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport loginAction from './actions/loginAction'\nclass Landing extends React.Component {\n\n\tguestLogin() {\n\t\tthis.props.firebase.login(null,null).then(res=>{\n\t\t\tthis.props.setLogin(res.user);\n\t\t\tthis.props.history.push(\"/\");\t\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t  <div className=\"container-fluid landing\">\n\t    <div className=\"row\">\n      \t\t<div className=\"col-lg-6\">\n\t\t\t\t<h3>\n\t\t\t\t\tBottom Shelf News is a crowd-sourced comedy news site!\n\t\t\t\t</h3>\n\t\t\t\t<p>\n\t\t\t\t\tThe blue links are the titles of today's top news stories. \n\t\t\t\t\tThe black headlines are our user's funniest alternatives. \n\t\t\t\t\tYou can vote on your favorite submission, or write your own!\n\t\t\t\t</p>\n\n\n\t\t\t\t<p>\n\t\t\t\t\tBottom Shelf News is in development, This demo page provides a preview of it's core functionality.\n\t\t\t\t\tYou can view <Link to=\"/news\">headlines and submissions</Link> now, \n\t\t\t\t\tor <Link to=\"/login\">Log In</Link> to vote and submit! \n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf you don't want to make an account, you can \n\t\t\t\t\t<button onClick={this.guestLogin.bind(this)}>continue as a guest</button>\n\t\t\t\t\t. Guest accounts have full access to Bottom Shelf News features, \n\t\t\t\t\tbut if you log out and return you won't be able to access the account again.\n\t\t\t\t</p>\n      </div>\n    </div>\n  </div> );\n\n\t}\n}\nlet mstp = (state) => ({firebase:state.firebase});\nlet mdtp = (dispatch) => (  {setLogin : (user) => dispatch(loginAction(user)) }  );\nexport default connect(mstp,mdtp)(Landing);","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport loginAction from './actions/loginAction';\nimport {connect} from 'react-redux';\n\nclass LoginForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\", error:null};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.firebase.login(this.state.email, this.state.pass)\n\t\t\t.then(res=>{\n\t\t\t\tthis.setState({email:\"\",pass:\"\"});\n\t\t\t\tthis.props.setLogin(res.user);\n\t\t\t\tthis.props.history.push(\"/\");\t\n\t\t\t})\n\t\t\t.catch(error=>{\n\t\t\t\t//this.setState({error:error});\n\t\t\t});\n\t}\n\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\n\tguestLogin() {\n\t\tthis.props.firebase.login(null,null).then(res=>{\n\t\t\tthis.props.setLogin(res.user);\n\t\t\tthis.setState({email:\"\",pass:\"\", welcome:true});\n\t\t\tthis.props.history.push(\"/\");\t\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t<label> Email: </label>\n\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t<label> Password: </label>\n\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t<p></p>\n\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t{this.state.error? <p>{this.state.error.message}</p> : null }\n\t\t\t<p>Don't have an account? <Link to='/signup'> Sign Up! </Link></p>\n\t\t\t<button type=\"button\" className=\"form-control\" onClick={this.guestLogin.bind(this)}>Continue as Guest</button>\n\t\t</form>);\n\t}\n}\nlet mapStateToProps = function(state) {return {...state}};\nlet mapDispatchToProps = function(dispatch) {\n\treturn {\n\t\tsetLogin : (user) => dispatch(loginAction(user))\n\t};\n}\nlet Connected = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\nconst Login = withRouter(Connected);\nexport default Login;","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nclass SignupForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\", displayName:\"\"};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"submit\");\n\t\tconsole.log(this.props.firebase);\n\t\tthis.props.firebase\n\t\t\t.createUser(this.state.email, this.state.pass, this.state.displayName)\n\t\t\t\t.then(authUser => {\n\t\t\t\t\tconsole.log(\"signup success\");\n\t\t\t\t\tthis.setState({email:\"\", pass:\"\", error:null});\n\t\t\t\t\tthis.props.history.push(\"/home\");\n\t\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t\tthis.setState({ error });\n\t\t\t\t});\n\t}\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\trender() {\n\t\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t<h3 className=\"col-sm-6 text-center\">Register New Account</h3>\n\t\t\t</div> \n\t\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t\t<label> Display Name: </label>\n\t\t\t\t<input name=\"displayName\" className=\"form-control\" value={this.state.displayName} onChange={this.change.bind(this)}/>\n\t\t\t\t<label> Email: </label>\n\t\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t\t<label> Password: </label>\n\t\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t\t<p></p>\n\t\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t</form>\n\t\t\t{this.state.error? \n\t\t\t\t<div>\n\t\t\t\t\t<h5>error!</h5>\n\t\t\t\t\t{this.state.error.message}\n\t\t\t\t</div> \n\t\t\t: null}\n\t\t</div>);\n\t}\n}\nlet mapStateToProps = (state) => ({firebase:state.firebase});\nconst SignupPage = connect(mapStateToProps)(withRouter(SignupForm));\nexport default SignupPage;","let gotPostsAction = (posts) => ({type:\"GOT_POSTS_ACTION\", data:posts});\nexport default gotPostsAction;","let deleteAction = (postID) => ({type: 'DELETE_ACTION', postID: postID});\n\nexport default deleteAction;\n","let editAction = (postID,title,url) => (\n\t{\n\t\ttype: 'EDIT_ACTION', \n\t\tpostID: postID, \n\t\tnewTitle:title, \n\t\tnewURL:url\n\t}\n);\n\nexport default editAction;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nclass Rewrite extends React.Component {\n\trender() {\n\t\t// if not logged in, props.uid==null. be more explicit??\n\t\tlet temp = this.props.rw.votes[this.props.uid];\n\t\tlet vote = \n\t\t\t(temp===true)? 1 : \n\t\t\t(temp===false)? -1 : 0;\n\t\treturn (\n\t\t  <div>\n\t\t  \t<div className='headlinebar'>\n\t\t\t    <span>{\"(\"+this.props.rw.score+\")  \"}</span>\n\t\t\t    <span>{this.props.rw.headline}</span>\n\t\t\t</div>\n\t\t  \t<div className='headlineinfo'>\n\t\t  \t\t<Link to={'/user/'+this.props.rw.user}>{this.props.rw.username}</Link>\n\t\t\t    {this.props.uid &&\n\t\t    \t\t<span style={{marginLeft:'4px'}} >\n\t\t    \t\t\t<span>Vote!</span>\n\t\t    \t\t\t{this.buttons(vote)}\n\t\t\t    \t</span>\n\t\t\t    }\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t}\n\tbuttons(vote) {\n\t\tif (vote===0) {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(true)} className='vote-button'>+</button>\n\t\t\t\t<button onClick={()=>this.vote(false)} className='vote-button'>-</button>\n\t\t\t</span>);\n\t\t}\t\n\t\telse if (vote===1) {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(null)} className='vote-button voted' >+</button>\n\t\t\t\t<button onClick={()=>this.vote(false)} className='vote-button'>-</button>\n\t\t\t</span>);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(true)} className='vote-button'>+</button>\n\t\t\t\t<button onClick={()=>this.vote(null)} className='vote-button voted'>-</button>\n\t\t\t</span>);\n\t\t}\n\t}\n\tvote = (v) => {\n\t\tthis.props.firebase.vote(this.props.postID, this.props.rw.key, v);\n\t\tthis.props.vote(v)\n\t}\n}\n\nlet mstp = state=>({\n\tfirebase:state.firebase, \n\tuid: state.user? state.user.uid :null\n});\n\nexport default connect(mstp)(Rewrite);\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport deleteAction from './actions/deleteAction';\nimport editAction from './actions/editAction';\nimport Rewrite from './Rewrite';\nimport {withRouter} from 'react-router-dom';\nimport uuid from 'uuid';\n\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {headlines:this.props.headlines.slice(0,this.props.show)};\n  }\n\n  submit(title) {\n    if (!title) return;\n    let newkey = this.props.firebase.newHeadline(this.props.postID, title);\n    //console.log(this.props.headlines[0]);\n    let newhl = {headline:title, \n                 user:this.props.user.uid, \n                 username:this.props.user.displayName, \n                 key:newkey,\n                 score:1,\n                 votes: {[this.props.user.uid]:true}};\n    this.setState({headlines:this.state.headlines.concat([newhl])});\n  }\n  vote(headlineID, v) {\n    let newhl = this.state.headlines.slice(0);\n    for (var i=0; i<this.state.headlines.length; i++) {\n      if (this.state.headlines[i].key === headlineID) {\n        let temp = this.state.headlines[i];\n        temp.votes[this.props.user.uid] = v;\n        let reducer = (score, cur)=> score + (cur===true?1:(cur===false?-1:0));\n        let score = Object.values(temp.votes).reduce(reducer,0);\n        temp.score=score;\n        newhl[i] = temp;\n      }\n    }\n    this.setState({headlines:newhl});\n  }\n  render() {\n    //console.log(this.props.headlines);\n    return (\n      <li className='news-item'>\n        <p>\n          <Link to={'/detail/' + this.props.postID} className='original-title' >{this.props.orTitle}</Link>\n        </p>\n        {this.state.headlines.map(headline =>\n            <Rewrite\n              key={uuid.v4()}\n              className=\"best-rewrite\" \n              postID={this.props.postID} \n              rw={headline}\n              vote={this.vote.bind(this, headline.key) }\n            />\n          )\n        }\n        \n        {\n        this.props.user && \n          <NewSubmission submit={this.submit.bind(this)}/>\n        }\n\n      </li>\n     );\n  }\n}\n\nlet NewSubmission = (props) => {\n  let [inEdit, setInEdit] = useState(false);\n  return (\n    <div>\n      {\n        inEdit? <Editor submit={props.submit} cancel={()=>setInEdit(false)} /> \n        : <button onClick={()=>setInEdit(true)}>New Submission</button>\n      }\n    </div>\n  )\n}\n\nlet Editor = props=> {\n  let text_ref = React.createRef();\n  return (\n      <div>\n        <fieldset>\n          <textarea ref={text_ref} name='title' style={{width:'80%', height: '2em'}} />\n        </fieldset>\n        <button onClick={()=>{props.submit(text_ref.current.value);props.cancel();}}>Submit</button>\n        <button onClick={props.cancel}>Cancel</button>\n      </div>\n    );\n}\n\nlet mstp = state=>({\n  firebase:state.firebase,\n  user: state.user,\n});\nlet mdtp = dispatch =>({\n  deleteSuccess: (id)=> dispatch(deleteAction(id)),\n  editSuccess: (id,title,url)=>dispatch(editAction(id,title,url))\n});\nexport default withRouter(connect(mstp,mdtp)(Item));","import uuid from 'uuid';\nimport React from 'react';\nimport Item from './Item';\n//import {connect} from 'react-redux';\n\n/* TODO:\n  Right now creating Items with the props I will send once data is organzied how I want.\n  First change here, then elsewhere\n  News Item consists of:\n  Original Title\n  URL\n  Best Rewriting\n  Other Rewritings (2)\n*/\nconst ItemList = (props) => {\n  return (\n    <div>\n      <ul className = 'links'>\n        {props.items.map(item =>\n         <Item \n            key={uuid.v4()} \n            postID = {item.postID}\n            category={item.category} \n            orTitle={item.title} \n            timestamp={item.timestamp}\n            headlines={item.headlines}\n            show={props.show?props.show:4}\n            url={item.url} \n         />\n        )}\n      </ul>\n    </div>\n  );\n  }\n//NOTE: mstp removed, can restore\nexport default ItemList;","let sortHeadlines = (submissions) => {\n\t//console.log(submissions);\n\tif (!submissions) return [];\n\tlet headlines = Object.keys(submissions)\n\t.map(key=>{\n\t\tlet headline = submissions[key]\n\t\tlet reducer = function(score, cur) {\n\t\t\tif (cur) return score+1;\n\t\t\telse if (cur===false) return score-1;\n\t\t\treturn score;\n\t\t}\n\t\tif (!headline.votes) headline.votes = [];\t\n\t\tlet score = Object.values(headline.votes).reduce(reducer,0);\n\t\theadline.score=score;\n\t\theadline.key=key;\n\t\treturn headline;\n\t});\n\theadlines.sort( (a,b)=>b.score-a.score);\n\treturn headlines;\n}\nexport default sortHeadlines;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport gotPostsAction from './actions/gotPostsAction';\nimport ItemList from './ItemList';\nimport sortHeadlines from './util/sortHeadlines';\nimport {Link} from 'react-router-dom';\n\nclass NewsHome extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// 'stories' is array of keys, ordered\n\t\t// submissions is key:subs\n\t\tthis.state = {submissions:null}\n\t}\n\t// we use DidMount for initial API call\n\tcomponentDidMount() {\n\t\tlet stories = null; // save story data as a [key:data] object\n\t\tlet keys = null;  // save story keys in sorted order\n\t\tthis.props.firebase.getTopPosts()\n\t\t.then(res=>res.val())\n\t\t.then(postsObject=> {\n\t\t\tif (!postsObject) return;\n\t\t\tstories = postsObject;\n\t\t\tkeys = Object.keys(postsObject);\n\t\t\tlet subs = keys.map(k=>this.props.firebase.getSubmissionsForPost(k));\n\t\t\treturn Promise.all(subs);\n\t\t})\n\t\t.then(results => results.map(r=>r.val()))\n\t\t.then(submissions=>{\n\t\t\tlet subs = submissions.map( (sub,index) => {\n\t\t\t\treturn {[keys[index]]:sub};\n\t\t\t});\n\t\t\tlet posts = keys.map((key,index) => {\n\t\t\t\tlet s = stories[key];\n\t\t\t\ts.postID=key;\n\t\t\t\tif (subs[index]) {\n\t\t\t\t\tlet headlines = subs[index][Object.keys(subs[index])[0]];\n\t\t\t\t\ts.headlines = sortHeadlines(headlines);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ts.headlines = [];\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t});\n\t\t\tthis.props.gotPosts(posts);\n\t\t})\n\t\t.catch(e=>console.log(e));\n\t}\n\n\trender() {\n\t\treturn  (\n\t\t\t<div>\n\t\t\t\t<h2>News Articles</h2>\n\t\t        {this.props.firebase.auth.currentUser? <Link to='/new'>Submit Article</Link> : null }\n\t\t\t\t<ItemList items={this.props.posts} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nlet mstp = state => {\n\treturn {\n\t\tfirebase:state.firebase,\n\t\tposts:state.posts};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => {dispatch(gotPostsAction(posts));}\n})\nexport default connect(mstp, mdtp)(NewsHome);\n","import React from 'react';\n\nclass Newspaper extends React.Component { \n    render() {\n        return (\n<div className=\"newspaper\">\n\t<h1>Bottom Shelf News</h1>\n</div>);\n    }\n}\nexport default Newspaper;","import React from 'react';\nimport ItemList from './ItemList';\nimport gotPostsAction from './actions/gotPostsAction';\nimport {connect} from 'react-redux';\n\nclass Category extends React.Component {\n\tcomponentDidMount() {\n\t\t//let category = this.props.match.params.category;\n\t\t/*\n\t    axios.get(\"http://localhost:8080/api/posts/category/\" + category)\n\t    .then( response => {\n\t    \tthis.props.gotPosts(response.data);\n\t    })\n\t    .catch(err => {\n\t    \tconsole.log(\"Error Fetching Posts:\");\n\t    \tconsole.log(err);\n\t    }); */\n\t}\n\n\trender() {\n\t\treturn  (\n\t\t\t<div>\n\t\t\t\t<h2>News Articles</h2>\n\t\t\t\t{/* HERE is where to conditionally show plus to add new post */}\n\t\t\t\t<ItemList show_category={true} items={this.props.posts} />\n\t\t\t</div>\n\t\t);\n\t}\n}\nlet mstp = state => {\n\treturn {posts:state.posts};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => dispatch(gotPostsAction(posts))\n})\nexport default connect(mstp, mdtp)(Category);\n","import React from 'react';\nimport gotPostsAction from './actions/gotPostsAction';\nimport {connect} from 'react-redux';\nimport ItemList from './ItemList';\nimport sortHeadlines from './util/sortHeadlines';\n\nclass UserPage extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {postsAndUserSubmissions:null}\n\t}\n\t/* \n\tTODO this is roundabout fuckery\n\tfirst get all posts WITH user subs\n\tretrieve each individually\n\tfilter subs to target user & display\n\tthis is garbage\n\t*/ \n\tcomponentDidMount() {\n\t\tlet user = this.props.match.params.user;\n\t\tthis.props.firebase.getSubmissionsByUser(user)\n\t\t.then(res => res.val())\n\t\t.then(posts => {\n\t\t\tconsole.log(posts);\n\n\t\t\tif (!posts || !posts.stories) return;\n\n\t\t\tlet storiesWithUserSubs = posts.stories;\n\t\t\tlet story_keys = Object.keys(storiesWithUserSubs);\n\n\t\t\tlet subPromises = story_keys.map(key => {\n\t\t\t\tlet subs = Object.keys(storiesWithUserSubs[key].submissions);\n\t\t\t\treturn subs.map(subID => key + \"/\" + subID);\n\t\t\t})\n\t\t\t.flat()\n\t\t\t.map(k=>this.props.firebase.getStorySubmissionByID(k));\n\n\t\t\tPromise.all(subPromises)\n\t\t\t.then(res => res.map(sub=>{\n\t\t\t\tlet path = sub.ref.path.toString().split('/');\n\t\t\t\tlet storyID = path[path.length-2];\n\t\t\t\treturn [storyID, sub.val()];\n\t\t\t}))\n\t\t\t.then(submissions=>{\n\t\t\t\tlet stories = {};\n\t\t\t\tsubmissions.forEach(sub => {\n\t\t\t\t\tif (!stories[sub[0]]) {\n\t\t\t\t\t\tstories[sub[0]] = [sub[1]];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstories[sub[0]].push(sub[1]);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tlet story_promises = story_keys.map(k=>this.props.firebase.getStoryByID(k))\n\t\t\t\tPromise.all(story_promises)\n\t\t\t\t.then(res=>res.map(story=>[story.key, story.val()]))\n\t\t\t\t.then(story_data=>{\n\t\t\t\t\tconsole.log(story_data);\n\t\t\t\t\tlet items = [];\n\t\t\t\t\tstory_data.forEach(story=>{\n\t\t\t\t\t\tlet key = story[0];\n\t\t\t\t\t\tlet temp = stories[key];\n\t\t\t\t\t\tstories[key] = story[1];\n\t\t\t\t\t\tstories[key].headlines = sortHeadlines(temp);\n\t\t\t\t\t\tstories[key].postID=key;\n\t\t\t\t\t\titems.push(stories[key]);\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({postsAndUserSubmissions:items});\n\t\t\t\t})\n\t\t\t});\n\t\t})\n\t}\n\n\trender() {\n\t\tif (!this.state.postsAndUserSubmissions) return <div></div>;\n\t\treturn <ItemList items={this.state.postsAndUserSubmissions} show={100}/>\n\t}\n}\nlet mstp = state => {\n\treturn {firebase:state.firebase};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => dispatch(gotPostsAction(posts))\n})\nexport default connect(mstp, mdtp)(UserPage);\n","let articles = [\n     [\"OLD First\",\"http://example.com\",\"general\"],\n     [\"OLD Second\",\"http://example.com\",\"general\"],\n     [\"OLD Third one - Fake Post\",\"http://example.com\",\"general\"],\n     [\"OLD Fourth\",\"http://example.com\",\"general\"],\n     [\"OLD fifth\",\"http://example.com\",\"general\"],\n     [\"OLD kdlfjaklsdjfalksdjf\",\"http://example.com\",\"general\"],\n     [\"OLD djsfasdf\",\"http://example.com\",\"general\"],\n     [\"OLD A News Article\",\"http://example.com\",\"general\"],\n     [\"OLD ABC!\",\"http://example.com\",\"general\"],\n     [\"OLD hello \",\"http://example.com\",\"general\"],\n     [\"OLD last one\",\"http://example.com\",\"general\"],\n];\nexport default articles;","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport uuid from 'uuid';\nimport articles from './articles';\n\nconst isValidURL = function(str) {\n    return true;//(str.substring(0,7)==='http://' || str.substring(0,8) === 'https://' || str[0]==='#')\n}\n\nclass NewPost extends React.Component {\n\n  cancel = (e )=> {\n    e.preventDefault();\n    this.props.history.push('/news');\n  }\n  fakeVotes() {\n    console.log(\"fake votes\");\n    this.props.posts.forEach(post => {\n      console.log(post.submissions);\n      if (!post.submissions) return;\n      Object.keys(post.submissions).forEach(sub =>{\n        this.props.firebase.fakeVotes(post.postID, sub, 10);\n      });\n    });\n  }\n  \n  fakeSubs() {\n    console.log(\"fake subs\");\n    this.props.posts.forEach(post => {\n      console.log(post);\n      [1,2,3].forEach(num => this.props.firebase.newHeadline(post.postID, \"Fake Headline #\" + num));\n    });\n  }\n  \n  fake_yesterday() {\n      articles.forEach(a=>this.props.firebase.newArticle(a[0],a[1],a[2],true));\n      this.props.history.push(\"/news\");\n  }\n  fake() {\n      articles.forEach(a=>this.props.firebase.newArticle(a[0],a[1],a[2]));\n      this.props.history.push(\"/news\");\n  }\n\n  submit = (e)=> {\n    e.preventDefault();\n    if (e.target.url.value && e.target.title.value) {\n      if (!isValidURL(e.target.url.value)) {\n        //TODO handle this\n        console.log(\"invalid URL\");\n        return;\n      }\n      let [title,url,cat] = [e.target.title.value, e.target.url.value, e.target.category.value];\n      this.props.firebase.newArticle(title,url,cat);\n      this.props.history.push(\"/news\");\n    }\n    else {\n      //tell the user to fill out the form properly\n    }\n  }\n\n  render() {\n      if (!this.props.user) {\n        this.props.history.push('/login');\n        return null;\n      }\n      var selector;\n\n      //if props.params has a specific category to default to:\n      if (this.props.params && this.props.params.category) {\n        selector = (\n            <select name='category'>\n              <option value={this.props.params.category}>\n                {this.props.params.category}\n              </option>\n              {\n                this.props.categories\n                .filter(name => name !== this.props.params.category)\n                .map(name => <option key={uuid.v4()} value={name}>{name} </option>)\n              }\n            </select>\n          )\n      }\n\n      //if no specific category - order is the default from [categories]\n      else {\n        selector = (\n          <select name='category'>\n                {this.props.categories.map(name => \n                  <option key={uuid.v4()} value={name}>{name}</option>\n                  )}\n          </select>\n        )\n      }\n\n      return (\n        <div className='new-post'>\n          <h2>Submit a New Arcticle</h2>\n          { true &&\n          <div> \n            <button onClick={this.fake.bind(this)}>Make a Bunch of Fake Posts</button>\n            <button onClick={this.fake_yesterday.bind(this)}>From Yesterday</button>\n            <button onClick={this.fakeSubs.bind(this)}>Submit a Few Fake Headlines for Each Post</button>\n            <button onClick={this.fakeVotes.bind(this)}>Fake Voting on Headlines</button>\n          </div>\n          }\n          <form autoComplete='off' action='' onSubmit = {this.submit}>\n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n                Title\n              </div>\n              <textarea className='form-control' autoFocus={true} name='title' placeholder='title' />\n              <div className='byline'>\n                Enter the original title of the article\n              </div>\n            </fieldset>\n        \n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n               URL\n              </div>\n              <textarea className='form-control' name='url' placeholder='URL' />\n              <div className='byline'>\n                Please submit a link to a valid news source\n              </div>\n            </fieldset>\n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n              Article Category\n              </div>\n              {selector}\n            </fieldset>\n            <div className = 'new-post-buttons'>\n              <button type='submit'>Submit</button>\n              <button onClick={this.cancel}>Cancel</button>\n            </div>\n          </form>\n        </div>\n      )\n  }\n}\n\nconst MapStateToProps = state => ({posts:state.posts, categories:state.categories, user:state.user, firebase:state.firebase});\n\nexport default withRouter(connect(MapStateToProps)(NewPost));\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Item from './Item';\nimport sortHeadlines from './util/sortHeadlines';\nclass Detail extends React.Component {\n\t/*\n\tFetch all for this.props.match.params.postID from server\n\tDisplay expanded version of Item\n\t*/\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {item:null}\n\t}\n\tcomponentDidMount() {\n\t\tlet storyID = this.props.match.params.postID;\n\t\tPromise.all(\n\t\t\t[this.props.firebase.getSubmissionsForPost(storyID,100),\n\t\t\tthis.props.firebase.getStoryByID(storyID)]\n\t\t)\n\t\t.then(res=>{\n\t\t\tlet subs = res[0].val();\n\t\t\tlet story = res[1].val();\n\t\t\tif (subs) {\n\t\t\t\tstory.headlines=sortHeadlines(subs);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstory.headlines = [];\n\t\t\t}\n\t\t\tconsole.log(story);\n\t\t\tthis.setState({item:story});\n\t\t})\n\t}\n\trender() {\n\t\tif (!this.state.item) return <div>hi</div>;\n\t\tlet item = this.state.item;\n\t\treturn <ul>\n\t\t\t<Item \n            postID = {this.props.match.params.postID}\n            category={item.category} \n            orTitle={item.title} \n            timestamp={item.timestamp}\n            headlines={item.headlines}\n            show={100}\n            url={item.url} \n\t        />\n\t     </ul>;\n\t}\n}\nlet mstp = state => {\n\treturn {\n\t\tfirebase:state.firebase\n\t};\n}\nexport default connect(mstp)(Detail);","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport Landing from './Landing';\nimport Login from './Login';\nimport Signup from './Signup';\nimport {connect} from 'react-redux';\nimport NewsHome from './NewsHome';\nimport Newspaper from './Newspaper';\nimport Category from './Category';\nimport UserPage from './UserPage';\nimport NewPost from './NewPost';\nimport Detail from './Detail';\n\nfunction TopBar(props) {\n\tlet logOut = ()=>{\n\t\tprops.firebase.logOut();\n\t\tprops.doLogout();\n\t};\n\treturn (\n\t\t\t<div className=\"top\">\n\t\t        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t        \t<ul className=\"nav navbar-nav\">\n\t\t        \t\t<li>\n\t\t\t\t\t\t\t<Link to={'/'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Home</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to={'/news'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">News</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t{ false &&\n\t\t\t\t\t\t\t<Link to={'/newspaper'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">The Paper</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{ props.user? \n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/user/' + props.uid}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Profile</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>  \n\t\t\t\t\t\t : \n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/login'}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Log In</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t        \t<ul className=\"nav navbar-nav ml-auto\">\n\t\t        \t\t{props.user &&  <li><span className=\"navbar-text\">{props.user}</span></li>}\n\t\t        \t\t{ props.user? \n\t\t\t        \t\t<li>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={logOut}>Log Out</button>\n\t\t\t        \t\t</li>\n\t\t\t        \t : \n\t\t\t        \t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/signup'}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Sign Up</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t        \t\t</li>\n\t\t\t        \t}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<Route exact path='/' component = {Landing} />\n\t\t\t\t<Route path='/news' component = {NewsHome} />\n\t\t\t\t<Route path='/newspaper' component = {Newspaper} />\n\t\t\t\t<Route path='/login' component = {Login} />\n\t\t\t\t<Route path='/signup' component = {Signup} />\n\t\t\t\t<Route path='/detail/:postID' component = {Detail} />\n\t\t\t\t<Route path='/category/:category' component = {Category} />\n\t\t\t\t<Route path='/user/:user' component = {UserPage} />\n\t\t\t\t<Route path='/new' component = {NewPost} />\n\t\t\t</div>\n\t\t);\n}\n\nfunction mstp(state, ownProps) {\n\treturn {\n\t\tfirebase:state.firebase, \n\t\tuser: state.user? (state.user.displayName || \"anonymous\") : null, \n\t\tuid:state.user?state.user.uid:null};\n}\nfunction mdtp(disp) {\n\treturn {\n\t\tdoLogout: ()=>disp({type:'LOGOUT_ACTION'})\n\t}\n}\nexport default connect(mstp,mdtp)(TopBar);\n\n\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './TopBar';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<TopBar/>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n\t\t\t<Provider store={configureStore}>\n\t\t\t\t<App/>\n\t\t\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}